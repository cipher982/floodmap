services:
  # Map tile server
  tileserver:
    image: maptiler/tileserver-gl:latest
    container_name: ${COMPOSE_PROJECT_NAME}-tileserver
    volumes:
      - type: bind
        source: ${BASE_MAPS_PATH}
        target: /data
        read_only: true
    environment:
      - TILESERVER_CONFIG=/data/config.json
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep -v grep | grep 'node /usr/src/app' > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # FloodMap Web Application (serves website + API)
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-webapp
    volumes:
      # Mount elevation source data (raw SRTM files for runtime generation)
      - type: bind
        source: ${ELEVATION_SOURCE_PATH}
        target: /app/data/elevation-source
        read_only: true
      # Mount precompressed elevation tiles (Q10 optimized: 95% storage reduction)
      - type: bind
        source: ${ELEVATION_TILES_PATH}
        target: /app/data/elevation-tiles
        read_only: true
      # Mount base map data directory
      - type: bind
        source: ${BASE_MAPS_PATH}
        target: /app/data/base-maps
        read_only: true
      # Mount cache directory
      - api-cache:/cache
    environment:
      # Port Configuration
      - API_PORT=${API_PORT}
      - TILESERVER_PORT=${TILESERVER_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - WEBAPP_PORT=8000
      - TILESERVER_URL=http://tileserver:8080

      # Performance Configuration
      - ELEVATION_CACHE_SIZE=${ELEVATION_CACHE_SIZE}
      - TILE_CACHE_SIZE=${TILE_CACHE_SIZE}
      - NODATA_VALUE=${NODATA_VALUE}
      - VECTOR_TILE_MIN_SIZE=${VECTOR_TILE_MIN_SIZE}

      # Environment and monitoring
      - ENVIRONMENT=${ENVIRONMENT}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}

      # Docker Compose
      - MEMORY_LIMIT=${MEMORY_LIMIT}
      - CPU_LIMIT=${CPU_LIMIT}

      # System settings
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    depends_on:
      - tileserver
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT}
          cpus: ${CPU_LIMIT}

volumes:
  api-cache:
    driver: local

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}-network
